summary(model_all)
summary(model_age_diabp)
sjt.lm(model_age_diabp)
ggpairs(fram_sel, aes(colour = 'dark blue', alpha = 0.4))
# scatter plot matrix
library(GGally)
ggpairs(fram_sel, aes(colour = 'dark blue', alpha = 0.4))
scatterplot.matrix(~TOTCHOL+
AGE +
DIABP+
BMI+
HEARTRTE+
GLUCOSE
,  data = fram, main= 'Scatterplot Matrix')
pairs(~TOTCHOL+
AGE +
DIABP+
BMI+
HEARTRTE+
GLUCOSE
,  data = fram, main= 'Scatterplot Matrix')
boxplot( fram$AGE, fram$DIABP, fram$CIGPDAY, fram$BMI, fram$HEARTRTE, fram$GLUCOSE,  col = brewer.pal(6, "Pastel2" ), boxwex=.4,
names = c('AGE','DIABP','CIGPDAY','BMI','HEARTRTE','GLUCOSE'))
rcorr(as.matrix(fram_sel))
multi.hist(fh, bcol = 'skyblue', dcol = "red")
ggpairs(fram_sel, aes(colour = 'dark blue', alpha = 0.4))
splom()
library(tidyverse)
df<-read_csv('framingham_200.csv')
glimpse(df)
boxplot.stats(fram)$out
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
q1<- qqnorm(fram$GLUCOSE_log, main = 'QQ-plot for Glucose')
qqline(fram$GLUCOSE_log, col = "red")
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
data(nycflights)
names(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(n())
sfo_feb_flights
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(n())
sfo_feb_flights
glimpse(nycflights)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(arr_delay == "SFO")
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(arr_delay == "SFO")
ggplot(sfo_feb_flights, aes( x = arr_delay))+
geom_histogram()
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(arr_delay == "SFO", month = 2)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(arr_delay == "SFO", month == 2)
ggplot(sfo_feb_flights, aes( x = ))+
geom_histogram()
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(arr_delay == "SFO", month == 2)
ggplot(sfo_feb_flights, aes( x = "SFO"))+
geom_histogram()
sfo_feb_flights
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes( x = ))+
geom_histogram()
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram()
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 30)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 50)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n())
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay))
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise()
#ggplot(sfo_feb_flights, aes(x=arr_delay))+
# geom_histogram(binwidth = 15)
#summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
sfo_feb_flights
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(sfo_feb_flights)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(mean())
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(mean(arr_delay))
#ggplot(sfo_feb_flights, aes(x=arr_delay))+
# geom_histogram(binwidth = 15)
#summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
sfo_feb_flights
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
ggplot(sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
ggplot(sfo_feb_flights, aes( x= arr_delay))+
geom_histogram(binwidth = 15)
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes( x= arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
# type your code for Question 3 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
group_by(carrier)%>%
summarise(IQR(arr_delay))
sfo_feb_flights
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 4 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
summarise(n())
sfo_feb_flights
# type your code for Question 2 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(sfo_feb_flights, aes( x= arr_delay))+
geom_histogram(binwidth = 15)
summarise(sfo_feb_flights, sfo_mean=mean(arr_delay), sfo_sd=sd(arr_delay), n(), IQR(arr_delay), max(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)%>%
group_by(carrier)%>%
summarise(IQR(arr_delay))
# type your code for Question 4 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
names(nycflights)
?arrange
# type your code for Question 8 here, and Knit
mutate(nycflights,
avg_speed = distance/air_time )%>%
arrange(desc(avg_speed))%>%
select(avg_speed, tailnum)
glimpse(nycflights)
# type your code for Question 9 here, and Knit
mutate(nycflights,
avg_speed = distance/air_time )
# type your code for Question 9 here, and Knit
mutate(nycflights,
avg_speed = distance/air_time )
ggplot(nycflights, aes(x=avg_speed, y= distance))+
geom_point()
# type your code for Question 9 here, and Knit
nyc <- mutate(nycflights,
avg_speed = distance/air_time )
ggplot(nyc, aes(x=avg_speed, y= distance))+
geom_point()
# type your code for Question 9 here, and Knit
mutate(nycflights,
avg_speed = distance/air_time )%>%
ggplot(nycflights, aes(x=avg_speed, y= distance))+
geom_point()
# type your code for Question 9 here, and Knit
nyc <- mutate(nycflights,
avg_speed = distance/air_time )
ggplot(nyc, aes(x=avg_speed, y= distance))+
geom_point()
# type your code for Question 10 here, and Knit
mutate(nycflights,
arr_type = ifelse(arr_delay<=0, 'on time', 'delayed'))
glimpse(nycflights)
search()
ls()
citation()
q()
contributors()
q()
diff <- 26.33-18.125
diff <- 26.33-18.125
diff
pt(.1)
pt(.1,99)
pt(.05,99, lower.tail = FALSE)
e <- sqrt((3.4/10)+(2.7/11))
se <-
e <- sqrt((3.4/10)+(2.7/11))
e
e <- sqrt((3.4^2/10)+(2.7^2/11))
e
e <- sqrt((3.4^2/18)+(2.7^2/18))
e
qt(97.5, 30, lower.tail = FALSE)
?qt
rt(40, 5)
qt(.1,45)
qt((1-.95), 5)
qt((1-.95), 5, lower.tail = F)
pt(1.96, 6)
rnorm(3)
pnorm(q = 2,mean = 0, sd = 1)
pnorm(q = 1,mean = 0, sd = 1)
pnorm(q = 1,mean = 0, sd = 1,lower.tail = F)
pnorm(2)
pnorm(2, lower.tail = F)
1-pnorm(2)
pnorm(3)
pnorm(-1)
pnorm(2)
qnorm(.9772)
#normal distribution
pnorm(-1.509)
pnorm(-2.6)
pnorm(-1)
pnorm(-.999)
pnorm(-0.0001)
pnorm(3.8)
pnorm(4)
pnorm(500)
pnorm(100)
pnorm(8)
qnorm(.15)
pt(.5,2)
pt(.01, df=10)
1-pt(3,5)
qt(.95)
qt(95)
qt(.95,4)
qt(.99,df=a0, lower.tail = F)
qt(.99,df=10, lower.tail = F)
qt(.99,df=10, lower.tail = T)
1-.99
.01/2
qt(.05,10)
qt(.99, 10)*2
qt(.99, 10)/2
1-.005
.995/2
.005
1-.025
qt(.975, 10)
qt(.975, 10, lower.tail = F)
pt(2.228, 10)
1-pt(2.228,10)
source('~/.active-rstudio-document')
se <- sqrt(((p1*(1-p1))/1037)+((p2*(1-p2))/1028))
source('~/.active-rstudio-document')
p1 <- 493/1037
p2 <- 596/1028
se <- sqrt(((p1*(1-p1))/1037)+((p2*(1-p2))/1028))
se
p3 <- 0.36
n <- 50
se <- sqrt((p3*(1-p3))/n)
se
prop.test(.56, 100, p=.6, alternative = 'less')
35/250
se <- sqrt(((p1*(1-p1))/1037)+((p2*(1-p2))/1028))
se
.3*.7
.21/50
sqrt(.0042)
lapply(fram_sel, kurtosis)
qnorm(p=.975, mean = 0, sd=1)
theta <- seq(from=0, to=1, by=0.01)
plot(theta, dbeta(theta,41,11), type = 'l')
plot(theta, dbeta(theta,1,5), type = 'l')
theta <- seq(from = 0.01, to = 0.99, by = 0.01)
dbeta(theta,8,16)
plot(theta, dbeta(theta,8,16))
max(dbeta(theta,8,16))
theta
cbind(theta,(dbeta(theta,8,16)))
q <- .32
q+1.96*sqrt((q*(1-q))/20)
1/6
pbeta(.5,1,5)
.01/8
plot(theta, dbeta(theta,41,11), type = 'l')
lines(theta,dbeta(theta,8,4), lty=2)
plot(theta,dgamma(theta, shape = 8, scale = 1))
plot(theta,dgamma(theta, shape = 8, rate = 1/8))
67/6
pgamma(.9,8,1/8)
qgamma(.9,shape = 8, rate = 1)
qgamma(.05,shape = 8, rate = 1)
25/16
5/61.5
pgamma(1/10, shape = 5, rate = 81.5)
5/81.5
3+16+8+114+60+4+23+30+105
16+8+114+60+4+23+30+105
qgamma(.975, shape = 9, rate = 390)
seq(110.120)
seq(110,120)
sum(seq(110,120))
mean(seq(110,120))
setwd("~/Documents/1. Online courses/3. Coursera/0.  Statistics with R-duke university/4. Bayesian Statistics/8. distribution/Probability_Distribution")
mu <- seq(110,120)
prior <- rep(0.5/10, 11)
prior[11]
loglike=rep(0,11)
prior <- rep(0.5/10, 11)
prior[11]
loglike=rep(0,11)
for (i in 1:100){
loglike + dnorm(x[i], mean = mu, sd =15, log = TRUE)
}
library(tidyverse)
library(LearnBayes)
data("studentdata")
names(studentdata)
glimpse(studentdata)
attach(studentdata)
dim(studentdata)
hours_sleep <- WakeUp - ToSleep
hist(hours_sleep)
boxplot(hours_sleep ~ Gender)
plot(jitter(ToSleep), jitter(hours_sleep))
fit <- lm(hours_sleep ~ ToSleep)
abline(fit)
p <- seq(from= 0.05, to=0.95, by= 0.1)
prior <- c(1,5.2,8,7.2,4.6,2.1,0.7,0.1,0,0)
prior
prior <- prior/sum(prior)
prior
plot(p,prior, type = 'h', ylab = 'prior probability')
data <- c(11,16) # 11 success and 16 failure
post <- pdisc(p, prior, data)
round(cbind(p, prior, post), 2)
library(lattice)
PRIOR <- data.frame('prior', p, prior)
POST <- data.frame('posterior',p,post)
names(PRIOR) <- c('Type','P','Probability')
names(POST) <- c('Type','P','Probability')
data <- rbind(PRIOR,POST)
xyplot(Probability ~ P| Type, data = data, layout=c(1,2), type='h', lwd =3, col='black')
install.packages('rjags')
install.packages('R2jags')
library(rjags)
"
}"
model = "model
{
theta ~ dunif(0,1)
x ~ dbin(theta,N)
}
"
data = list(x=2,N=5)
data = list(x=2,N=5)
variable_names = c('theta')
burn_in = 1000
steps = 10000
source('~/.active-rstudio-document')
setwd("~/Documents/1. Online courses/3. Coursera/0.  Statistics with R-duke university/4. Bayesian Statistics/8. distribution/Probability_Distribution/brandon brewer")
source('~/Documents/1. Online courses/3. Coursera/0.  Statistics with R-duke university/4. Bayesian Statistics/8. distribution/Probability_Distribution/brandon brewer/Untitled.R')
results
plot(results$theta, type = 'l')
setwd("~/Documents/1. Online courses/3. Coursera/0.  Statistics with R-duke university/4. Bayesian Statistics/8. distribution/Probability_Distribution/bayesian_computation")
library(LearnBayes)
data(footballscores)
attach(footballscores)
summary(footballscores)
