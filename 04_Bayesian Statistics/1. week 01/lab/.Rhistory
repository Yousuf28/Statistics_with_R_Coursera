theta <-  seq(from=0, to=1, by=0.1)
plot(theta, dbinom(3,8,theta))
dbeta(theta,shape1 = 4,shape2 = 8)
plot(theta, dbeta(theta,shape1 = 6, shape2 = 9), col='red')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 10), col= 'green')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 11), col='blue')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 9), col='red')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 18), col= 'green')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 27), col='blue')
plot(theta, dbeta(theta,shape1 = 6, shape2 = 36), col='darkred')
plot(theta, dbeta(theta,shape1 = 90, shape2 = 10), col='red')
plot(theta, dbeta(theta,shape1 = 90, shape2 = 10), col='red')
theta <-  seq(from=0, to=1, by=0.01)
plot(theta, dbinom(3,8,theta))
dbeta(theta,shape1 = 4,shape2 = 8)
plot(theta, dbeta(theta,shape1 = 90, shape2 = 10), col='red')
plot(theta, dbeta(theta,shape1 = 9, shape2 = 1), col= 'green')
plot(theta, dbeta(theta,shape1 = 10, shape2 = 90), col='blue')
plot(theta, dbeta(theta,shape1 = 50, shape2 = 50), col='darkred')
plot(theta, dbeta(theta,shape1 = 1, shape2 = 9), col='darkred')
plot(theta, dbeta(theta,shape1 = 90, shape2 = 10), col='red')
plot(theta, dbeta(theta,shape1 = 9, shape2 = 1), col= 'green')
plot(theta, dbeta(theta,shape1 = 10, shape2 = 90), col='blue')
plot(theta, dbeta(theta,shape1 = 50, shape2 = 50), col='darkred')
plot(theta, dbeta(theta,shape1 = 1, shape2 = 9), col='darkred')
plot(theta, dgamma(theta,shape1 = 50, shape2 = 50), col='darkred')
plot(theta, dgamma(theta,shape1 = 50, rate =  = 50), col='darkred')
plot(theta, dgamma(theta,shape1 = 50, rate = 50), col='darkred')
plot(theta, dgamma(theta,shape = 50, rate = 50), col='darkred')
library(statsr)
bandit_posterior(data = data.frame(machine=1L, outcome='W'))
bandit_posterior(data = data.frame(machine=c(1L,1L), outcome=c('W', 'L')))
data1 = data.frame(machine=c(1L), outcome = c('W'))
data2 = data.frame(machine=c(1L), outcome= c('L'))
bandit_posterior(data1)
bandit_posterior(data2)
bandit_posterior(data1) %>%
bandit_posterior(data2, prior = .)
bandit_posterior(data1) %>%
bandit_posterior(data2)
library(tidyverse)
bandit_posterior(data1) %>%
bandit_posterior(data2)
bandit_posterior(data1) %>%
bandit_posterior(data2, prior = .)
data3 = data.frame(machine=c(1L,1L), outcome = c('W','W'))
data4 = data.frame(machine=c(2L,2L,2L), outcome= c('W','W','L'))
data3
data4
bandit_posterior(data3)
bandit_posterior(data4)
bandit_posterior(data3) %>%
bandit_posterior(data4, prior = .)
bandit_posterior(data4) %>%
bandit_posterior(data3, prior = .)
library(tidyverse)
library(statsr)
data("brfss")
glimpse(brfss)
qnorm(p = c(0.025,0.975), mean = 10, sd=2.236)
# type your code for the Exercise here, and Knit
qnorm(p = c(0.025,0.975), mean = 10, sd=2.236)
# type your code for the Exercise here, and Knit
qbeta(p = c(.05, 0.90), shape1 = 2, shape2 = 5)
# type your code for the Exercise here, and Knit
qbeta(p = c(.05, 0.95), shape1 = 2, shape2 = 5)
# type your code for the Exercise here, and Knit
qgamma(p=c(0.005, .995), shape = 4, rate = 8)
table(brfss$sex)
count_sex <- table(brfss$sex)
count_sex <- as.data.frame(count_sex)
total_population <- count_sex$Freq
total_population
total_population <- colSums(count_sex$Freq)
total_population <- colSums(count_sex)
total_population <- count(count_sex$Var1)
count_sex <- table(brfss$sex)
count_sex
total_population <- count_sex$male
total_population <- count_sex$Male
count_sex <- as.tibble(count_sex)
total_population <- count_sex$Male
count_sex
?as.tibble
count_sex <- as.tibble(count_sex, colnames <- c('sex', 'number'))
count_sex
count_sex <- as.tibble(count_sex, colnames <- c('sex', 'number'))
count_sex
count_sex <- as.tibble(count_sex, colnames(c('sex', 'number')) )
count_sex
count_sex <- as.tibble(count_sex )
total_population <- sum(count_sex$n)
total_population
male <- count_sex[1,1]
male <- count_sex[1,2]
female <- count_sex[2,2]
male
female
male_prop <- male/total_population
female_prop <- female/total_population
male_prop
female_prop
n <- length(brfss$sex)
x <- sum(brfss$sex=='Female')
n
x
p_hat <- 0.5172
se <- sqrt((p_hat*(1-p_hat))/5000)
up <- p_hat+(1.98*se)
low <- p_hat-(1.96*se)
up <- p_hat+(1.96*se)
low <- p_hat-(1.96*se)
up
low
qbeta(p=c(0.025,0.975), shape1 = 2587, shape2 = 2415)
qbeta(p=c(0.025,0.975), shape1 = 2587, shape2 = 2415)
qbeta(p=c(0.025,0.975), shape1 = 3086, shape2 = 2914)
qbeta(p=c(0.025,0.975), shape1 = 2591, shape2 = 2614)
brfss$fruit_per_day
sum(brfss$fruit_per_day)
qgamma(p=c(0.05,0.95), shape = 8115, rate = 5005)
qgamma(p=c(0.05,0.95), shape = 8119, rate = 5001)
library(statsr)
library(dplyr)
library(ggplot2)
data(ncc)
data(nc)
glimpse(nc)
hist(nc$weight)
hist(nc$weight)
ggplot(data=nc)+
geom_histogram(mapping = aes(y=weight))
ggplot(data=nc, aes=nc$weight)+
geom_histogram()
geom_histogram()
ggplot(data=nc, aes(nc$weight))+
geom_histogram()
ggplot(data=nc, aes(nc$weight))+
geom_histogram(bins = 50)
ggplot(data=nc, aes(nc$weight))+
geom_histogram(bins = 20)
# type your code for the Exercise here, and Knit
ggplot(data=nc, aes(nc$weight))+
geom_histogram(bins = 20)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
str(nc)
# type your code for the Exercise here, and Knit
ggplot(data=nc, aes(nc$weight))+
geom_histogram(bins = 20)
inference(y = weight, data = nc, statistic = "mean", type = "ci")
inference(y = weight, data = nc, statistic = "mean", type = "ci", method = 'theoretical')
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ci")
hist(nc$weight)
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ci", cred_level = .99)
bayes_inference(y = weight, data = nc, statistic = "mean", type = 'ci', cred_level = .99)
?inference
t.test(66900, mu = 68000,alternative = 'less', conf.level = .95)
bn <- rnorm(30,mean = 66900, sd = 1)
t.test(x = bn, mu = 68000,alternative = 'less', conf.level = .95)
bn <- rnorm(30,mean = 66900, sd = 5500)
t.test(x = bn, mu = 68000,alternative = 'less', conf.level = .95)
bn
nc_weight <- nc$weight
summary(nc_weight)
sd(nc$weight)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'twosided', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'two.sided', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'less', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'more', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'greater', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'less', conf.level = .95)
t.test(nc_weight, mu = 7, sd=1.509, alternative = 'two.sided', conf.level = .95)
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ht", null = 7, alternative = "twosided")
# type your code for the Exercise here, and Knit
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ht", null = 5.5, alternative = "twosided")
ggplot(nc)+
geom_boxplot(mapping = aes(x=habit))
ggplot(nc)+
geom_boxplot(mapping = aes(x=habit, y= weight))
# type your code for Question 5 here, and Knit
ggplot(nc)+
geom_boxplot(mapping = aes(x=habit, y= weight))
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
str(nc)
# type your code for the Exercise here, and Knit
ggplot(data=nc, aes(nc$weight))+
geom_histogram(bins = 20)
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ci")
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ht", null = 7, alternative = "twosided")
# type your code for the Exercise here, and Knit
bayes_inference(y = weight, data = nc, statistic = "mean", type = "ht", null = 5.5, alternative = "twosided")
# type your code for the Exercise here, and Knit
# type your code for Question 5 here, and Knit
ggplot(nc)+
geom_boxplot(mapping = aes(x=habit, y= weight))
bayes_inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
?bayes_inference
bayes_inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0, alternative = "twosided", hypothesis_prior = c(H1 = 0.2, H2 = 0.8))
?bayes_inference
bayes_inference(y = lowbirthweight, data = nc, success = "low", statistic = "proportion", type = "ht", null = 0.075, alternative = "twosided", beta_prior = c(75,925))
bayes_inference(y = lowbirthweight, data = nc, success = "low", statistic = "proportion", type = "ht", null = 0.075, alternative = "twosided", hypothesis_prior = c(H1 = 0.2, H2 = 0.8))
